// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_calculate_bbox
SEXP rcpp_calculate_bbox(SEXP x, SEXP geometry_cols);
RcppExport SEXP _geometries_rcpp_calculate_bbox(SEXP xSEXP, SEXP geometry_colsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< SEXP >::type geometry_cols(geometry_colsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_calculate_bbox(x, geometry_cols));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_geometry_dimensions
SEXP rcpp_geometry_dimensions(SEXP geometries);
RcppExport SEXP _geometries_rcpp_geometry_dimensions(SEXP geometriesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type geometries(geometriesSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_geometry_dimensions(geometries));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_coordinates
SEXP rcpp_coordinates(SEXP& geometries);
RcppExport SEXP _geometries_rcpp_coordinates(SEXP geometriesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP& >::type geometries(geometriesSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_coordinates(geometries));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_make_geometry
SEXP rcpp_make_geometry(Rcpp::DataFrame l, Rcpp::IntegerVector ids, Rcpp::IntegerVector geometry_cols, Rcpp::StringVector class_attribute);
RcppExport SEXP _geometries_rcpp_make_geometry(SEXP lSEXP, SEXP idsSEXP, SEXP geometry_colsSEXP, SEXP class_attributeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type l(lSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type ids(idsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type geometry_cols(geometry_colsSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type class_attribute(class_attributeSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_make_geometry(l, ids, geometry_cols, class_attribute));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_nest
SEXP rcpp_nest(SEXP x, int depth);
RcppExport SEXP _geometries_rcpp_nest(SEXP xSEXP, SEXP depthSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type depth(depthSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_nest(x, depth));
    return rcpp_result_gen;
END_RCPP
}
// tests
SEXP tests();
RcppExport SEXP _geometries_tests() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(tests());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_geometries_rcpp_calculate_bbox", (DL_FUNC) &_geometries_rcpp_calculate_bbox, 2},
    {"_geometries_rcpp_geometry_dimensions", (DL_FUNC) &_geometries_rcpp_geometry_dimensions, 1},
    {"_geometries_rcpp_coordinates", (DL_FUNC) &_geometries_rcpp_coordinates, 1},
    {"_geometries_rcpp_make_geometry", (DL_FUNC) &_geometries_rcpp_make_geometry, 4},
    {"_geometries_rcpp_nest", (DL_FUNC) &_geometries_rcpp_nest, 2},
    {"_geometries_tests", (DL_FUNC) &_geometries_tests, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_geometries(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
